diff --git a/.circleci/config.yml b/.circleci/config.yml
index 1d6a540ae..e19d7c939 100644
--- a/.circleci/config.yml
+++ b/.circleci/config.yml
@@ -365,16 +365,26 @@ jobs:
       - run: CC=gcc-10 CXX=g++-10 V=1 SKIP_LINK=1 ROCKSDB_CXX_STANDARD=c++20 make -j16 all 2>&1 # Linking broken because libgflags compiled with newer ABI
       - post-steps
 
-  build-linux-clang-13-no_test_run:
+  build-linux-gcc-11-no_test_run:
     machine:
       image: ubuntu-2004:202010-01
     resource_class: xlarge
     steps:
       - pre-steps
-      - install-clang-13
-      - run: CC=clang-13 CXX=clang++-13 USE_CLANG=1 make -j16 all 2>&1 
+      - run: sudo apt-get update -y && sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && sudo apt-get install gcc-11 g++-11 libgflags-dev
+      - run: CC=gcc-11 CXX=g++-11 V=1 SKIP_LINK=1 make -j16 all | .circleci/cat_ignore_eagain # Linking broken because libgflags compiled with newer ABI
       - post-steps
 
+#  build-linux-clang-13-no_test_run:
+#    machine:
+#      image: ubuntu-2004:202010-01
+#    resource_class: xlarge
+#    steps:
+#      - pre-steps
+#      - install-clang-13
+#      - run: CC=clang-13 CXX=clang++-13 USE_CLANG=1 make -j16 all 2>&1
+#      - post-steps
+
   build-windows:
     executor: windows-2xlarge
     parameters:
@@ -743,6 +753,7 @@ workflows:
       - build-linux-gcc-8-no_test_run
       - build-linux-gcc-9-no_test_run
       - build-linux-gcc-10-cxx20-no_test_run
+      - build-linux-gcc-11-no_test_run
   build-macos:
     jobs:
       - build-macos
diff --git a/table/table_test.cc b/table/table_test.cc
index 449922940..414daaedf 100644
--- a/table/table_test.cc
+++ b/table/table_test.cc
@@ -1361,7 +1361,7 @@ TEST_F(TablePropertyTest, PrefixScanTest) {
                                 {"num.555.3", "3"}, };
 
   // prefixes that exist
-  for (const std::string& prefix : {"num.111", "num.333", "num.555"}) {
+  for (const std::string prefix : {"num.111", "num.333", "num.555"}) {
     int num = 0;
     for (auto pos = props.lower_bound(prefix);
          pos != props.end() &&
@@ -1376,7 +1376,7 @@ TEST_F(TablePropertyTest, PrefixScanTest) {
   }
 
   // prefixes that don't exist
-  for (const std::string& prefix :
+  for (const std::string prefix :
        {"num.000", "num.222", "num.444", "num.666"}) {
     auto pos = props.lower_bound(prefix);
     ASSERT_TRUE(pos == props.end() ||
